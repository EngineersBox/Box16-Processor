/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module Mux_2x1_NBits #(
    parameter Bits = 2
)
(
    input [0:0] sel,
    input [(Bits - 1):0] in_0,
    input [(Bits - 1):0] in_1,
    output reg [(Bits - 1):0] out
);
    always @ (*) begin
        case (sel)
            1'h0: out = in_0;
            1'h1: out = in_1;
            default:
                out = 'h0;
        endcase
    end
endmodule


module condition_unit (
  input FlagWriteE,
  input CondE,
  input [3:0] FlagsE,
  input [3:0] ALUFlags,
  output CondExE,
  output [3:0] FlagsM
);
  Mux_2x1_NBits #(
    .Bits(4)
  )
  Mux_2x1_NBits_i0 (
    .sel( FlagWriteE ),
    .in_0( FlagsE ),
    .in_1( ALUFlags ),
    .out( FlagsM )
  );
  assign CondExE = (FlagsE[0] | ~ CondE);
endmodule
