-- generated by Digital. Don't modify this file!
-- Any changes will be lost if this file is regenerated.

LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity MUX_GATE_BUS_1 is
  generic ( Bits : integer ); 
  port (
    p_out: out std_logic_vector ((Bits-1) downto 0);
    sel: in std_logic;
    
    in_0: in std_logic_vector ((Bits-1) downto 0);
    in_1: in std_logic_vector ((Bits-1) downto 0) );
end MUX_GATE_BUS_1;

architecture Behavioral of MUX_GATE_BUS_1 is
begin
  with sel select
    p_out <=
      in_0 when '0',
      in_1 when '1',
      (others => '0') when others;
end Behavioral;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity main is
  port (
    FlagWriteE: in std_logic;
    CondE: in std_logic;
    FlagsE: in std_logic_vector(3 downto 0);
    ALUFlags: in std_logic_vector(3 downto 0);
    CondExE: out std_logic;
    FlagsM: out std_logic_vector(3 downto 0));
end main;

architecture Behavioral of main is
begin
  gate0: entity work.MUX_GATE_BUS_1
    generic map (
      Bits => 4)
    port map (
      sel => FlagWriteE,
      in_0 => FlagsE,
      in_1 => ALUFlags,
      p_out => FlagsM);
  CondExE <= (FlagsE(0) OR NOT CondE);
end Behavioral;
