-- generated by Digital. Don't modify this file!
-- Any changes will be lost if this file is regenerated.

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
use IEEE.NUMERIC_STD.ALL;

entity DIG_LUT_Opcode LUT is
  port (
    n0: in std_logic;
    n1: in std_logic;
    n2: in std_logic;
    n3: in std_logic;

    p_out: out std_logic_vector (10 downto 0)
);
end DIG_LUT_Opcode LUT;

architecture Behavioral of DIG_LUT_Opcode LUT is
  type mem is array ( 0 to 15) of std_logic_vector (10 downto 0);
  constant my_lut : mem := (
    "00000101000", "00000000000", "00000000000", "00000000000", "10011001100", 
    "10100110100", "00000000000", "00000000000", "10110100000", "10110100001", 
    "10110100010", "10110100011", "00000000000", "00000000000", "00000000000", 
    "00000000000");
  signal temp : std_logic_vector(3 downto 0);
begin
  temp <= n3 & n2 & n1 & n0;
  p_out <= my_lut(to_integer(unsigned(temp)));
end Behavioral;


LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity MUX_GATE_BUS_2 is
  generic ( Bits : integer ); 
  port (
    p_out: out std_logic_vector ((Bits-1) downto 0);
    sel: in std_logic_vector (1 downto 0);
    
    in_0: in std_logic_vector ((Bits-1) downto 0);
    in_1: in std_logic_vector ((Bits-1) downto 0);
    in_2: in std_logic_vector ((Bits-1) downto 0);
    in_3: in std_logic_vector ((Bits-1) downto 0) );
end MUX_GATE_BUS_2;

architecture Behavioral of MUX_GATE_BUS_2 is
begin
  with sel select
    p_out <=
      in_0 when "00",
      in_1 when "01",
      in_2 when "10",
      in_3 when "11",
      (others => '0') when others;
end Behavioral;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity main is
  port (
    INST: in std_logic_vector(15 downto 0);
    ALUOP: out std_logic_vector(1 downto 0);
    RS1: out std_logic_vector(2 downto 0);
    RS2: out std_logic_vector(2 downto 0);
    WS: out std_logic_vector(2 downto 0);
    STR: out std_logic;
    WE: out std_logic;
    DMUX: out std_logic_vector(1 downto 0);
    LDR: out std_logic);
end main;

architecture Behavioral of main is
  signal WS_temp: std_logic_vector(2 downto 0);
  signal s0: std_logic;
  signal s1: std_logic_vector(2 downto 0);
  signal s2: std_logic_vector(2 downto 0);
  signal s3: std_logic_vector(3 downto 0);
  signal s4: std_logic;
  signal s5: std_logic;
  signal s6: std_logic;
  signal s7: std_logic;
  signal s8: std_logic_vector(10 downto 0);
  signal s9: std_logic_vector(1 downto 0);
  signal s10: std_logic_vector(1 downto 0);
begin
  s0 <= INST(11);
  WS_temp <= INST(10 downto 8);
  s1 <= INST(6 downto 4);
  s2 <= INST(2 downto 0);
  s3 <= INST(15 downto 12);
  s4 <= s3(0);
  s5 <= s3(1);
  s6 <= s3(2);
  s7 <= s3(3);
  gate0: entity work.DIG_LUT_Opcode LUT -- Opcode LUT
    port map (
      n0 => s4,
      n1 => s5,
      n2 => s6,
      n3 => s7,
      p_out => s8);
  ALUOP <= s8(1 downto 0);
  DMUX <= s8(3 downto 2);
  LDR <= s8(4);
  WE <= s8(5);
  STR <= s8(6);
  s10 <= s8(8 downto 7);
  s9 <= s8(10 downto 9);
  gate1: entity work.MUX_GATE_BUS_2
    generic map (
      Bits => 3)
    port map (
      sel => s9,
      in_0 => "000",
      in_1 => WS_temp,
      in_2 => s1,
      in_3 => s2,
      p_out => RS1);
  gate2: entity work.MUX_GATE_BUS_2
    generic map (
      Bits => 3)
    port map (
      sel => s10,
      in_0 => "000",
      in_1 => WS_temp,
      in_2 => s1,
      in_3 => s2,
      p_out => RS2);
  WS <= WS_temp;
end Behavioral;
